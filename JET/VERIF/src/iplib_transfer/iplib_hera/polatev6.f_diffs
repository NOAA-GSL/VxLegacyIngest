21,24c21
< C           WHICH DEFAULTS TO ALL 1 (IF IPOPT(1)=-1 OR IPOPT(2)=-1).
< C           ANOTHER OPTION IS THE MINIMUM PERCENTAGE FOR MASK,
< C           I.E. PERCENT VALID INPUT DATA REQUIRED TO MAKE OUTPUT DATA,
< C           (IPOPT(3+IPOPT(1)) WHICH DEFAULTS TO 50 (IF -1).
---
> C           WHICH DEFAULTS TO ALL 1 (IF IPOPT(2)=-1.).
51,53d47
< C 1999-04-08  IREDELL  SPLIT IJKGDS INTO TWO PIECES
< C 2001-06-18  IREDELL  INCLUDE MINIMUM MASK PERCENTAGE OPTION
< C 2002-01-17  IREDELL  SAVE DATA FROM LAST CALL FOR OPTIMIZATION
63,65c57
< C                (DEFAULTS TO ALL 1 IF IPOPT(1)=-1 OR IPOPT(2)=-1).
< C                IPOPT(3+IPOPT(1)) IS MINIMUM PERCENTAGE FOR MASK
< C                (DEFAULTS TO 50 IF IPOPT(3+IPOPT(1)=-1)
---
> C                (DEFAULTS TO ALL 1 IF IPOPT(2)=-1).
99,100c91
< C   IJKGDS0      SET UP PARAMETERS FOR IJKGDS1
< C   (IJKGDS1)    RETURN FIELD POSITION FOR A GIVEN GRID POINT
---
> C   (IJKGDS)     RETURN FIELD POSITION FOR A GIVEN GRID POINT
108c99
< CFPP$ EXPAND(IJKGDS1,MOVECT)
---
> CFPP$ EXPAND(IJKGDS,MOVECT)
116a108
>       REAL XPTI(MI),YPTI(MI),RLOI(MI),RLAI(MI),CROI(MI),SROI(MI)
121d112
<       INTEGER IJKGDSA(20)
123,125d113
<       INTEGER,SAVE:: MIX=-1,KGDSIX(200)=-1
<       REAL,ALLOCATABLE,SAVE:: XPTI(:),YPTI(:),RLOI(:),RLAI(:),
<      &                        CROI(:),SROI(:)
135,144c123
<       IF(ANY(KGDSI.NE.KGDSIX)) THEN
<         IF(MIX.NE.MI) THEN
<           IF(MIX.GE.0) DEALLOCATE(XPTI,YPTI,RLOI,RLAI,CROI,SROI)
<           ALLOCATE(XPTI(MI),YPTI(MI),RLOI(MI),RLAI(MI),
<      &             CROI(MI),SROI(MI))
<           MIX=MI
<         ENDIF
<         CALL GDSWIZ(KGDSI, 0,MI,FILL,XPTI,YPTI,RLOI,RLAI,NV,1,CROI,SROI)
<         KGDSIX=KGDSI
<       ENDIF
---
>       CALL GDSWIZ(KGDSI, 0,MI,FILL,XPTI,YPTI,RLOI,RLAI,NV,1,CROI,SROI)
149,156c128,129
<       IF(IRET.EQ.0.AND.NB1.LT.0) IRET=32
<       LSW=1
<       IF(IPOPT(1).EQ.-1.OR.IPOPT(2).EQ.-1) LSW=0
<       IF(IRET.EQ.0.AND.LSW.EQ.1.AND.NB1.GT.15) IRET=32
<       MP=IPOPT(3+IPOPT(1))
<       IF(MP.EQ.-1.OR.MP.EQ.0) MP=50
<       IF(MP.LT.0.OR.MP.GT.100) IRET=32
<       PMP=MP*0.01
---
>       IF(IRET.EQ.0.AND.NB1.LT.0.) IRET=32
>       IF(IRET.EQ.0.AND.NB1.GE.20.AND.IPOPT(2).NE.-1) IRET=32
161c134
<         IF(LSW.EQ.1) THEN
---
>         IF(IPOPT(2).NE.-1) THEN
182d154
<       CALL IJKGDS0(KGDSI,IJKGDSA)
189,212c161,180
<         IF(LSW.EQ.1) WB=IPOPT(2+LB)
<         IF(WB.NE.0) THEN
<           DO N=1,NO
<             XPTB(N)=XPTS(N)+IB/REAL(NB2)
<             YPTB(N)=YPTS(N)+JB/REAL(NB2)
<           ENDDO
<           CALL GDSWIZ(KGDSO, 1,NO,FILL,XPTB,YPTB,RLOB,RLAB,NV,0,DUM,DUM)
<           CALL GDSWIZ(KGDSI,-1,NO,FILL,XPTB,YPTB,RLOB,RLAB,NV,0,DUM,DUM)
<           IF(IRET.EQ.0.AND.NV.EQ.0.AND.LB.EQ.0) IRET=2
<           DO N=1,NO
<             XI=XPTB(N)
<             YI=YPTB(N)
<             IF(XI.NE.FILL.AND.YI.NE.FILL) THEN
<               I1=NINT(XI)
<               J1=NINT(YI)
<               N11(N)=IJKGDS1(I1,J1,IJKGDSA)
<               IF(N11(N).GT.0) THEN
<                 CALL MOVECT(RLAI(N11(N)),RLOI(N11(N)),RLAT(N),RLON(N),
<      &                      CM11,SM11)
<                 C11(N)=CM11*CROI(N11(N))+SM11*SROI(N11(N))
<                 S11(N)=SM11*CROI(N11(N))-CM11*SROI(N11(N))
<               ENDIF
<             ELSE
<               N11(N)=0
---
>         IF(IPOPT(2).NE.-1) WB=IPOPT(2+LB)
>         DO N=1,NO
>           XPTB(N)=XPTS(N)+IB/REAL(NB2)
>           YPTB(N)=YPTS(N)+JB/REAL(NB2)
>         ENDDO
>         CALL GDSWIZ(KGDSO, 1,NO,FILL,XPTB,YPTB,RLOB,RLAB,NV,0,DUM,DUM)
>         CALL GDSWIZ(KGDSI,-1,NO,FILL,XPTB,YPTB,RLOB,RLAB,NV,0,DUM,DUM)
>         IF(IRET.EQ.0.AND.NV.EQ.0.AND.LB.EQ.0) IRET=2
>         DO N=1,NO
>           XI=XPTB(N)
>           YI=YPTB(N)
>           IF(XI.NE.FILL.AND.YI.NE.FILL) THEN
>             I1=NINT(XI)
>             J1=NINT(YI)
>             N11(N)=IJKGDS(I1,J1,KGDSI)
>             IF(N11(N).GT.0) THEN
>               CALL MOVECT(RLAI(N11(N)),RLOI(N11(N)),RLAT(N),RLON(N),
>      &                    CM11,SM11)
>               C11(N)=CM11*CROI(N11(N))+SM11*SROI(N11(N))
>               S11(N)=SM11*CROI(N11(N))-CM11*SROI(N11(N))
214c182,185
<           ENDDO
---
>           ELSE
>             N11(N)=0
>           ENDIF
>         ENDDO
218,227c189,197
<           DO K=1,KM
<             DO N=1,NO
<               IF(N11(N).GT.0) THEN
<                 IF(IBI(K).EQ.0.OR.LI(N11(N),K)) THEN
<                   U11=C11(N)*UI(N11(N),K)-S11(N)*VI(N11(N),K)
<                   V11=S11(N)*UI(N11(N),K)+C11(N)*VI(N11(N),K)
<                   UO(N,K)=UO(N,K)+WB*U11
<                   VO(N,K)=VO(N,K)+WB*V11
<                   WO(N,K)=WO(N,K)+WB
<                 ENDIF
---
>         DO K=1,KM
>           DO N=1,NO
>             IF(N11(N).GT.0) THEN
>               IF(IBI(K).EQ.0.AND.LI(N11(N),K)) THEN
>                 U11=C11(N)*UI(N11(N),K)-S11(N)*VI(N11(N),K)
>                 V11=S11(N)*UI(N11(N),K)+C11(N)*VI(N11(N),K)
>                 UO(N,K)=UO(N,K)+WB*U11
>                 VO(N,K)=VO(N,K)+WB*V11
>                 WO(N,K)=WO(N,K)+WB
229c199
<             ENDDO
---
>             ENDIF
231c201
<         ENDIF
---
>         ENDDO
234d203
< C  COMPUTE OUTPUT BITMAPS AND FIELDS
239c208
<           LO(N,K)=WO(N,K).GE.PMP*NB4
---
>           LO(N,K)=WO(N,K).GE.0.5*NB4
