11,12c11
< C           BITMAPS ARE NOW ALLOWED EVEN WHEN INVALID POINTS ARE WITHIN
< C           THE BICUBIC TEMPLATE PROVIDED THE MINIMUM WEIGHT IS REACHED. 
---
> C           IT REQUIRES THAT NO INPUT FIELDS HAVE BITMAPS (IBI=0).
15,18c14
< C           CONFINED WITHIN THE RANGE OF THE SURROUNDING 16 POINTS.
< C           ANOTHER OPTION IS THE MINIMUM PERCENTAGE FOR MASK,
< C           I.E. PERCENT VALID INPUT DATA REQUIRED TO MAKE OUTPUT DATA,
< C           (IPOPT(2)) WHICH DEFAULTS TO 50 (IF IPOPT(2)=-1).
---
> C           CONFINED WITHIN THE RANGE OF THE SURROUNDING 4 POINTS.
42,47d37
< C 1999-04-08  IREDELL  SPLIT IJKGDS INTO TWO PIECES
< C 2001-06-18  IREDELL  INCLUDE MINIMUM MASK PERCENTAGE OPTION
< C 2007-05-22  IREDELL  EXTRAPOLATE UP TO HALF A GRID CELL
< C 2007-10-30  IREDELL  CORRECT NORTH POLE INDEXING PROBLEM,
< C                      UNIFY MASKED AND NON-MASKED ALGORITHMS,
< C                      AND SAVE WEIGHTS FOR PERFORMANCE.
57,58d46
< C                IPOPT(2) IS MINIMUM PERCENTAGE FOR MASK
< C                (DEFAULTS TO 50 IF IPOPT(2)=-1)
67c55
< C     IBI      - INTEGER (KM) INPUT BITMAP FLAGS
---
> C     IBI      - INTEGER (KM) INPUT BITMAP FLAGS (MUST BE ALL 0)
84a73
> C                11   INVALID INPUT BITMAPS
88,89c77
< C   IJKGDS0      SET UP PARAMETERS FOR IJKGDS1
< C   (IJKGDS1)    RETURN FIELD POSITION FOR A GIVEN GRID POINT
---
> C   (IJKGDS)     RETURN FIELD POSITION FOR A GIVEN GRID POINT
96,106c84,90
<       IMPLICIT NONE
<       INTEGER,INTENT(IN):: IPOPT(20),KGDSI(200),KGDSO(200),MI,MO,KM
<       INTEGER,INTENT(IN):: IBI(KM)
<       LOGICAL*1,INTENT(IN):: LI(MI,KM)
<       REAL,INTENT(IN):: GI(MI,KM)
<       INTEGER,INTENT(INOUT):: NO
<       REAL,INTENT(INOUT):: RLAT(MO),RLON(MO)
<       INTEGER,INTENT(OUT):: IBO(KM)
<       LOGICAL*1,INTENT(OUT):: LO(MO,KM)
<       REAL,INTENT(OUT):: GO(MO,KM)
<       INTEGER,INTENT(OUT):: IRET
---
> CFPP$ EXPAND(IJKGDS)
>       INTEGER IPOPT(20)
>       INTEGER KGDSI(200),KGDSO(200)
>       INTEGER IBI(KM),IBO(KM)
>       LOGICAL*1 LI(MI,KM),LO(MO,KM)
>       REAL GI(MI,KM),GO(MO,KM)
>       REAL RLAT(MO),RLON(MO)
108,116c92,94
<       INTEGER IJX(4),IJY(4)
<       REAL WX(4),WY(4)
<       INTEGER IJKGDSA(20)
<       REAL,PARAMETER:: FILL=-9999.
<       INTEGER MCON,MP,N,I,J,K,NK,NV,IJKGDS1
<       REAL PMP,XIJ,YIJ,XF,YF,G,W,DUM,GMIN,GMAX
<       INTEGER,SAVE:: KGDSIX(200)=-1,KGDSOX(200)=-1,NOX=-1,IRETX=-1
<       INTEGER,ALLOCATABLE,SAVE:: NXY(:,:,:),NC(:)
<       REAL,ALLOCATABLE,SAVE:: RLATX(:),RLONX(:),WXY(:,:,:)
---
>       INTEGER N11(MO),N21(MO),N12(MO),N22(MO)
>       REAL W11(MO),W21(MO),W12(MO),W22(MO)
>       PARAMETER(FILL=-9999.)
118c96
< C  SET PARAMETERS
---
> C  COMPUTE NUMBER OF OUTPUT POINTS AND THEIR LATITUDES AND LONGITUDES.
120,128c98,101
<       MCON=IPOPT(1)
<       MP=IPOPT(2)
<       IF(MP.EQ.-1.OR.MP.EQ.0) MP=50
<       IF(MP.LT.0.OR.MP.GT.100) IRET=32
<       PMP=MP*0.01
< C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
< C  SAVE OR SKIP WEIGHT COMPUTATION
<       IF(IRET.EQ.0.AND.(KGDSO(1).LT.0.OR.
<      &    ANY(KGDSI.NE.KGDSIX).OR.ANY(KGDSO.NE.KGDSOX))) THEN
---
>       IF(KGDSO(1).GE.0) THEN
>         CALL GDSWIZ(KGDSO, 0,MO,FILL,XPTS,YPTS,RLON,RLAT,NO,0,DUM,DUM)
>         IF(NO.EQ.0) IRET=3
>       ENDIF
130,197c103,137
< C  COMPUTE NUMBER OF OUTPUT POINTS AND THEIR LATITUDES AND LONGITUDES.
<         IF(KGDSO(1).GE.0) THEN
<           CALL GDSWIZ(KGDSO, 0,MO,FILL,XPTS,YPTS,RLON,RLAT,NO,0,DUM,DUM)
<           IF(NO.EQ.0) IRET=3
<         ENDIF
< C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
< C  LOCATE INPUT POINTS
<         CALL GDSWIZ(KGDSI,-1,NO,FILL,XPTS,YPTS,RLON,RLAT,NV,0,DUM,DUM)
<         IF(IRET.EQ.0.AND.NV.EQ.0) IRET=2
< C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
< C  ALLOCATE AND SAVE GRID DATA
<         KGDSIX=KGDSI
<         KGDSOX=KGDSO
<         IF(NOX.NE.NO) THEN
<           IF(NOX.GE.0) DEALLOCATE(RLATX,RLONX,NC,NXY,WXY)
<           ALLOCATE(RLATX(NO),RLONX(NO),NC(NO),NXY(4,4,NO),WXY(4,4,NO))
<           NOX=NO
<         ENDIF
<         IRETX=IRET
< C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
< C  COMPUTE WEIGHTS
<         IF(IRET.EQ.0) THEN
<           CALL IJKGDS0(KGDSI,IJKGDSA)
< C$OMP PARALLEL DO
< C$OMP&PRIVATE(N,XIJ,YIJ,IJX,IJY,XF,YF,J,I,WX,WY)
<           DO N=1,NO
<             RLONX(N)=RLON(N)
<             RLATX(N)=RLAT(N)
<             XIJ=XPTS(N)
<             YIJ=YPTS(N)
<             IF(XIJ.NE.FILL.AND.YIJ.NE.FILL) THEN
<               IJX(1:4)=FLOOR(XIJ-1)+(/0,1,2,3/)
<               IJY(1:4)=FLOOR(YIJ-1)+(/0,1,2,3/)
<               XF=XIJ-IJX(2)
<               YF=YIJ-IJY(2)
<               DO J=1,4
<                 DO I=1,4
<                   NXY(I,J,N)=IJKGDS1(IJX(I),IJY(J),IJKGDSA)
<                 ENDDO
<               ENDDO
<               IF(MINVAL(NXY(1:4,1:4,N)).GT.0) THEN
< C  BICUBIC WHERE 16-POINT STENCIL IS AVAILABLE
<                 NC(N)=1
<                 WX(1)=XF*(1-XF)*(2-XF)/(-6.)
<                 WX(2)=(XF+1)*(1-XF)*(2-XF)/2.
<                 WX(3)=(XF+1)*XF*(2-XF)/2.
<                 WX(4)=(XF+1)*XF*(1-XF)/(-6.)
<                 WY(1)=YF*(1-YF)*(2-YF)/(-6.)
<                 WY(2)=(YF+1)*(1-YF)*(2-YF)/2.
<                 WY(3)=(YF+1)*YF*(2-YF)/2.
<                 WY(4)=(YF+1)*YF*(1-YF)/(-6.)
<               ELSE
< C  BILINEAR ELSEWHERE NEAR THE EDGE OF THE GRID
<                 NC(N)=2
<                 WX(1)=0
<                 WX(2)=(1-XF)
<                 WX(3)=XF
<                 WX(4)=0
<                 WY(1)=0
<                 WY(2)=(1-YF)
<                 WY(3)=YF
<                 WY(4)=0
<               ENDIF
<               DO J=1,4
<                 DO I=1,4
<                   WXY(I,J,N)=WX(I)*WY(J)
<                 ENDDO
<               ENDDO
---
> C  LOCATE INPUT POINTS AND COMPUTE THEIR WEIGHTS
>       CALL GDSWIZ(KGDSI,-1,NO,FILL,XPTS,YPTS,RLON,RLAT,NV,0,DUM,DUM)
>       IF(IRET.EQ.0.AND.NV.EQ.0) IRET=2
>       DO K=1,KM
>         IF(IBI(K).NE.0) IRET=11
>       ENDDO
> CMIC$ DO ALL AUTOSCOPE
>       DO K=1,KM
>         DO N=1,NO
>           GO(N,K)=0.
>           LO(N,K)=.FALSE.
>         ENDDO
>       ENDDO
> C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> C  COMPUTE CORNERS
>       IF(IRET.EQ.0) THEN
>         DO N=1,NO
>           XI=XPTS(N)
>           YI=YPTS(N)
>           IF(XI.NE.FILL.AND.YI.NE.FILL) THEN
>             I1=XI-1
>             I2=I1+3
>             J1=YI-1
>             J2=J1+3
>             XF=XI-I1-1
>             YF=YI-J1-1
>             N11(N)=IJKGDS(I1,J1,KGDSI)
>             N21(N)=IJKGDS(I2,J1,KGDSI)
>             N12(N)=IJKGDS(I1,J2,KGDSI)
>             N22(N)=IJKGDS(I2,J2,KGDSI)
>             IF(MIN(N11(N),N21(N),N12(N),N22(N)).GT.0) THEN
>               W11(N)=XF*(1-XF)*(2-XF)*YF*(1-YF)*(2-YF)/36
>               W21(N)=XF*(1-XF)*(1+XF)*YF*(1-YF)*(2-YF)/36
>               W12(N)=XF*(1-XF)*(2-XF)*YF*(1-YF)*(1+YF)/36
>               W22(N)=XF*(1-XF)*(1+XF)*YF*(1-YF)*(1+YF)/36
199c139,156
<               NC(N)=0
---
>               N11(N)=0
>               N21(N)=0
>               N12(N)=0
>               N22(N)=0
>             ENDIF
>           ELSE
>             N11(N)=0
>             N21(N)=0
>             N12(N)=0
>             N22(N)=0
>           ENDIF
>         ENDDO
> CMIC$ DO ALL AUTOSCOPE
>         DO K=1,KM
>           DO N=1,NO
>             IF(N11(N).GT.0) THEN
>               GO(N,K)=GO(N,K)+W11(N)*GI(N11(N),K)+W21(N)*GI(N21(N),K)
>      &                       +W12(N)*GI(N12(N),K)+W22(N)*GI(N22(N),K)
202,203c159
<         ENDIF
<       ENDIF
---
>         ENDDO
205,208c161,191
< C  INTERPOLATE OVER ALL FIELDS
<       IF(IRET.EQ.0.AND.IRETX.EQ.0) THEN
<         IF(KGDSO(1).GE.0) THEN
<           NO=NOX
---
> C  COMPUTE TOPS AND BOTTOMS
>         DO N=1,NO
>           XI=XPTS(N)
>           YI=YPTS(N)
>           IF(XI.NE.FILL.AND.YI.NE.FILL) THEN
>             LP=N11(N)
>             IF(LP.GT.0) THEN
>               I1=XI
>               I2=I1+1
>               J1=YI-1
>               J2=J1+3
>               XF=XI-I1
>               YF=YI-J1-1
>               N11(N)=IJKGDS(I1,J1,KGDSI)
>               N21(N)=IJKGDS(I2,J1,KGDSI)
>               N12(N)=IJKGDS(I1,J2,KGDSI)
>               N22(N)=IJKGDS(I2,J2,KGDSI)
>               W11(N)=-(1+XF)*(1-XF)*(2-XF)*YF*(1-YF)*(2-YF)/12
>               W21(N)=-XF*(2-XF)*(1+XF)*YF*(1-YF)*(2-YF)/12
>               W12(N)=-(1+XF)*(1-XF)*(2-XF)*YF*(1-YF)*(1+YF)/12
>               W22(N)=-XF*(2-XF)*(1+XF)*YF*(1-YF)*(1+YF)/12
>             ENDIF
>           ELSE
>             N11(N)=0
>             N21(N)=0
>             N12(N)=0
>             N22(N)=0
>           ENDIF
>         ENDDO
> CMIC$ DO ALL AUTOSCOPE
>         DO K=1,KM
210,211c193,196
<             RLON(N)=RLONX(N)
<             RLAT(N)=RLATX(N)
---
>             IF(N11(N).GT.0) THEN
>               GO(N,K)=GO(N,K)+W11(N)*GI(N11(N),K)+W21(N)*GI(N21(N),K)
>      &                       +W12(N)*GI(N12(N),K)+W22(N)*GI(N22(N),K)
>             ENDIF
213,240c198,220
<         ENDIF
< C$OMP PARALLEL DO
< C$OMP&PRIVATE(NK,K,N,G,W,GMIN,GMAX,J,I)
<         DO NK=1,NO*KM
<           K=(NK-1)/NO+1
<           N=NK-NO*(K-1)
<           IF(NC(N).GT.0) THEN
<             G=0
<             W=0
<             IF(MCON.GT.0) GMIN=HUGE(GMIN)
<             IF(MCON.GT.0) GMAX=-HUGE(GMAX)
<             DO J=NC(N),5-NC(N)
<               DO I=NC(N),5-NC(N)
<                 IF(NXY(I,J,N).GT.0.AND.
<      &             (IBI(K).EQ.0.OR.LI(NXY(I,J,N),K))) THEN
<                   G=G+WXY(I,J,N)*GI(NXY(I,J,N),K)
<                   W=W+WXY(I,J,N)
<                   IF(MCON.GT.0) GMIN=MIN(GMIN,GI(NXY(I,J,N),K))
<                   IF(MCON.GT.0) GMAX=MAX(GMAX,GI(NXY(I,J,N),K))
<                 ENDIF
<               ENDDO
<             ENDDO
<             LO(N,K)=W.GE.PMP
<             IF(LO(N,K)) THEN
<               GO(N,K)=G/W
<               IF(MCON.GT.0) GO(N,K)=MIN(MAX(GO(N,K),GMIN),GMAX)
<             ELSE
<               GO(N,K)=0.
---
>         ENDDO
> C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> C  COMPUTE LEFTS AND RIGHTS
>         DO N=1,NO
>           XI=XPTS(N)
>           YI=YPTS(N)
>           IF(XI.NE.FILL.AND.YI.NE.FILL) THEN
>             LP=N11(N)
>             IF(LP.GT.0) THEN
>               I1=XI-1
>               I2=I1+3
>               J1=YI
>               J2=J1+1
>               XF=XI-I1-1
>               YF=YI-J1
>               N11(N)=IJKGDS(I1,J1,KGDSI)
>               N21(N)=IJKGDS(I2,J1,KGDSI)
>               N12(N)=IJKGDS(I1,J2,KGDSI)
>               N22(N)=IJKGDS(I2,J2,KGDSI)
>               W11(N)=-XF*(1-XF)*(2-XF)*(1+YF)*(1-YF)*(2-YF)/12
>               W21(N)=-XF*(1-XF)*(1+XF)*(1+YF)*(1-YF)*(2-YF)/12
>               W12(N)=-XF*(1-XF)*(2-XF)*YF*(2-YF)*(1+YF)/12
>               W22(N)=-XF*(1-XF)*(1+XF)*YF*(2-YF)*(1+YF)/12
243,244c223,226
<             LO(N,K)=.FALSE.
<             GO(N,K)=0.
---
>             N11(N)=0
>             N21(N)=0
>             N12(N)=0
>             N22(N)=0
246a229
> CMIC$ DO ALL AUTOSCOPE
248,249c231,236
<           IBO(K)=IBI(K)
<           IF(.NOT.ALL(LO(1:NO,K))) IBO(K)=1
---
>           DO N=1,NO
>             IF(N11(N).GT.0) THEN
>               GO(N,K)=GO(N,K)+W11(N)*GI(N11(N),K)+W21(N)*GI(N21(N),K)
>      &                       +W12(N)*GI(N12(N),K)+W22(N)*GI(N22(N),K)
>             ENDIF
>           ENDDO
251d237
<         IF(KGDSO(1).EQ.0) CALL POLFIXS(NO,MO,KM,RLAT,RLON,IBO,LO,GO)
253,255c239,294
<       ELSE
<         IF(IRET.EQ.0) IRET=IRETX
<         IF(KGDSO(1).GE.0) NO=0
---
> C  COMPUTE CENTERS
>         DO N=1,NO
>           XI=XPTS(N)
>           YI=YPTS(N)
>           IF(XI.NE.FILL.AND.YI.NE.FILL) THEN
>             LP=N11(N)
>             I1=XI
>             I2=I1+1
>             J1=YI
>             J2=J1+1
>             XF=XI-I1
>             YF=YI-J1
>             N11(N)=IJKGDS(I1,J1,KGDSI)
>             N21(N)=IJKGDS(I2,J1,KGDSI)
>             N12(N)=IJKGDS(I1,J2,KGDSI)
>             N22(N)=IJKGDS(I2,J2,KGDSI)
>             IF(LP.GT.0) THEN
>               W11(N)=(1+XF)*(1-XF)*(2-XF)*(1+YF)*(1-YF)*(2-YF)/4
>               W21(N)=XF*(2-XF)*(1+XF)*(1+YF)*(1-YF)*(2-YF)/4
>               W12(N)=(1+XF)*(1-XF)*(2-XF)*YF*(2-YF)*(1+YF)/4
>               W22(N)=XF*(2-XF)*(1+XF)*YF*(2-YF)*(1+YF)/4
>             ELSEIF(MIN(N11(N),N21(N),N12(N),N22(N)).GT.0) THEN
>               W11(N)=(1-XF)*(1-YF)
>               W21(N)=XF*(1-YF)
>               W12(N)=(1-XF)*YF
>               W22(N)=XF*YF
>             ELSE
>               N11(N)=0
>               N21(N)=0
>               N12(N)=0
>               N22(N)=0
>             ENDIF
>           ELSE
>             N11(N)=0
>             N21(N)=0
>             N12(N)=0
>             N22(N)=0
>           ENDIF
>         ENDDO
> CMIC$ DO ALL AUTOSCOPE
>         DO K=1,KM
>           DO N=1,NO
>             IF(N11(N).GT.0) THEN
>               GO(N,K)=GO(N,K)+W11(N)*GI(N11(N),K)+W21(N)*GI(N21(N),K)
>      &                       +W12(N)*GI(N12(N),K)+W22(N)*GI(N22(N),K)
>               IF(IPOPT(1).GT.0) THEN
>                 GMIN=MIN(GI(N11(N),K),GI(N21(N),K),
>      &                   GI(N12(N),K),GI(N22(N),K))
>                 GMAX=MAX(GI(N11(N),K),GI(N21(N),K),
>      &                   GI(N12(N),K),GI(N22(N),K))
>                 GO(N,K)=MIN(MAX(GO(N,K),GMIN),GMAX)
>               ENDIF
>               LO(N,K)=.TRUE.
>             ENDIF
>           ENDDO
>         ENDDO
257a297,308
> CMIC$ DO ALL AUTOSCOPE
>       DO K=1,KM
>         IBO(K)=IBI(K)
>         DO N=1,NO
>           IF(.NOT.LO(N,K)) THEN
>             IBO(K)=1
>             GO(N,K)=0.
>           ENDIF
>         ENDDO
>       ENDDO
>       IF(KGDSO(1).EQ.0) CALL POLFIXS(NO,MO,KM,RLAT,RLON,IBO,LO,GO)
> C - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
