/* wgrib2 main module:  w. ebisuzaki
 *
 * 1/2007 mods M. Schwarb: unsigned int ndata
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stddef.h>
#include <ctype.h>
#include <math.h>
#include <time.h>
#include "gfsSoundingLib.h"


int main(int argc, char **argv) {
    int i,i_raob;

    float *T, *RH, *U, *V, *Z;
    float *CAPE, *CIn, *PW;
    float *values3d, *values2d;
    int numX;
    int numY;
    int numLevels = 26;
    int numRaobs;

    char month_name[4];


    raob_data_struct raob_data[numLevels];

    static float P[] = {1000, 975, 950, 925, 900, 850, 800, 750, 700, 650, 600, 550, 500, 450,
                400, 350, 300, 250, 200, 150, 100, 70, 50, 30, 20, 10};

    static char *levels[] = {"1000 mb", "975 mb", "950 mb", "925 mb", "900 mb", "850 mb", "800 mb",
                             "750 mb", "700 mb", "650 mb", "600 mb", "550 mb", "500 mb", "450 mb",
                             "400 mb", "350 mb", "300 mb", "250 mb", "200 mb", "150 mb", "100 mb",
                             "70 mb", "50 mb", "30 mb", "20 mb", "10 mb"};
    static char *params3d[] = {":TMP:",":RH:",":UGRD:",":VGRD:", ":HGT:"};
    static char *params2d[] = {":CAPE:surface",":CIN:surface","PWAT"};


    int num3dparams = 5;
    int num2dparams = 3;
    int startx, starty;
    long index;
    float xcart, ycart;
    float grid_lat, grid_lon;

    long num3dvalues;
    long num2dvalues;

    float delta_north;
    float delta_east;

    char *ptr;                    /* pointer to parts of the input filename */
    int year,month,mday,jday,hour,fcst_proj;
    time_t valid_secs;
    struct tm tm;
    struct tm *tp;

    char line[400];

    RAOB *RAOBS[MAXRAOBS];
    RAOB *rb;

    if (argc < 3) {
      printf ("gfsTest gribFileName raobFileName ddeg\n");
      exit(0);
    }
    
    char *model = argv[1];
    char *fileName = argv[2];
    char *raobFileName = argv[3];
    float ddeg = atof(argv[4]);
    numX = 360/ddeg;
    numY = 180/ddeg + 1;
    printf("ddeg is %5.3f, numX = %d, numY = %d\n",ddeg,numX,numY);
    num3dvalues = num3dparams * numLevels * numX * numY;
    num2dvalues = num2dparams * numX * numY;

    /* get valid time from filename */
    /* e.g. "/path.../0336314000003.grib" */
    ptr = strrchr(fileName,'/');
    sscanf(ptr,"/%2d%3d%2d000%3d",&year,&jday,&hour,&fcst_proj);
    /* get day month and year */
    year += 2000;
    valid_secs = makeSecs(year,jday,hour) + 3600*fcst_proj;
   /* get tp to point to the tm structure */
    tp=&tm;
    tp = localtime(&valid_secs);
    year= tp->tm_year+1900;
    month = tp->tm_mon+1;
    mday = tp->tm_mday;
    hour = tp->tm_hour;
    (void)strftime(month_name,4,"%b",tp);

    numRaobs = read_raobs(RAOBS,MAXRAOBS,raobFileName);  
 
    values3d = (float *)malloc(num3dvalues * sizeof(float));
    values2d = (float *)malloc(num2dvalues * sizeof(float));
    for (i=0; i< num3dvalues;i++) {
       values3d[i] = MISSING;
    }
    for (i=0; i< num2dvalues;i++) {
       values2d[i] = MISSING;
    }

    /* read grib2 2 data */
    getGrib2Data(fileName,numX,numY,numLevels,levels, params3d, params2d,
                 num3dparams,num2dparams,values3d, values2d);
     T  = &values3d[0 * numLevels * numX * numY];
     RH = &values3d[1 * numLevels * numX * numY];
     U  = &values3d[2 * numLevels * numX * numY];
     V  = &values3d[3 * numLevels * numX * numY];
     Z  = &values3d[4 * numLevels * numX * numY];
     CAPE = &values2d[0 * numX * numY];
     CIn = &values2d[1 * numX * numY];
     PW = &values2d[2 * numX * numY];

    /* compute sounding and print output */
    for (i_raob=0; i_raob<numRaobs; i_raob++) {

       rb = RAOBS[i_raob];
       /* get x,y point */
       get_ij(rb->lat,rb->lon,ddeg,&xcart,&ycart);
       startx = xcart+0.5;
       starty = ycart+0.5;
       index = startx + (starty*numX);

       /* get distance of GFS sounding from site */
        get_ll(startx,starty,ddeg,&grid_lat,&grid_lon);
        delta_north = (grid_lat - rb->lat)*59.9; /* nautical miles */
        delta_east = (grid_lon - rb->lon)*cos(rb->lat * 0.0175)*59.9; /* nm  */
        /* printf ("starty: %d startx: %d grid_lat: %f grid_lon: %f\n",
         starty, startx, grid_lat, grid_lon);
         printf("ycart %f lat: %f xcart: %f lon: %f\n",ycart,rb->lat,xcart,rb->lon);
	*/
	printf("delta_east= %f delta_north= %f\n", delta_east,delta_north);

        computeSounding(T, RH, U, V, Z, P, numX, numY, numLevels, rb,
                    &raob_data[0], ddeg);
  /* see what it looks like */
  printf("Begin sounding data for %s:\n",rb->name);
  snprintf(line,100,"%s        % 2d     % 2d      %s    %4d",
	  model,hour,mday,month_name,year);

  printf("%s\n",line);		/* time information */
  printf("   CAPE%7.0f    CIN%7.0f  Helic%7d     PW%7.0f\n",
	 CAPE[index],CIn[index],MISSING,PW[index]);
  
  printf("%7d%7d%7d%7.2f%7.2f%7.0f%7d\n",1,23062,rb->raob_id,
	 grid_lat,-grid_lon,rb->elev,MISSING);
  printf("%7d%7d%7d%7d%7d%7d%7d\n",
	 2,MISSING,MISSING,MISSING,numLevels+4,MISSING,MISSING);
  printf("      3           %-19.19s   12     kt\n",
	 rb->name);
   for(i=0;i<numLevels;i++) {
     printf("%7ld%7ld%7ld%7ld%7ld%7ld%7ld\n",
	    raob_data[i].fr,
	    raob_data[i].pr,
	    raob_data[i].ht,
	    raob_data[i].tmp,
	    raob_data[i].dp,
	    raob_data[i].wd,
	    raob_data[i].ws);
   }
   printf("End sounding data\n");
   printf("Begin hydrometeor data for %s:\n",rb->name);
   /*
   for(i=0;i<icount;i++) {
     if(
	(raob_data[i].clwmr != MISSING || raob_data[i].rwmr != MISSING ||
	   raob_data[i].snmr != MISSING || raob_data[i].icmr != MISSING ||
	   raob_data[i].grmr != MISSING)) {
	 printf("%7ld%7ld%7ld%7ld%7ld%7ld\n",
		raob_data[i].pr,
		raob_data[i].clwmr,
		raob_data[i].rwmr,
		raob_data[i].snmr,
		raob_data[i].icmr,
		raob_data[i].grmr
		);
       }
     }
   */
   printf("End hydrometeor data\n");

   /*
	---------- SUSAN'S STUFF FOLLOWS '--------------
        snprintf(line,100,"%s        % 2d     % 2d      %s    %4d",
          model,hour,mday,month_name,year);
        printf ("%s\n",line);
        printf ("   CAPE%7.0f    CIn%7.0f  Helic%7d       PW%7.0f\n",CAPE[index],
              CIn[index],MISSING,PW[index]);
        printf("%7d%7d%7d%7.2f%7.2f%7.0f%7d\n",1,23062,rb->raob_id,
         grid_lat,-grid_lon,rb->elev,MISSING);
        printf("%7d%7d%7d%7d%7d%7d%7d\n",
         2,MISSING,MISSING,MISSING,numLines,MISSING,MISSING);
        printf("      3           %-19.19s   12     kt\n",
         rb->name);


       for(j=0;j<numLevels;j++) {
            printf("%7ld%7ld%7ld%7ld%7ld%7ld%7ld\n",
            raob_data[j].fr, raob_data[j].pr, raob_data[j].ht, raob_data[j].tmp,
            raob_data[j].dp, raob_data[j].wd, raob_data[j].ws);
       }
       printf("END\n");
   */
    }
    return 1;
}
